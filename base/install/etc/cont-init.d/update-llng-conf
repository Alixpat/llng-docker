#!/command/with-contenv sh

# Fix logLevel
perl -i -pe 's/^logLevel\s*=.*$/logLevel=$ENV{LOGLEVEL}/' /etc/lemonldap-ng/lemonldap-ng.ini

# OPTIONAL DATABASE FOR CONFIGURATION
#
# 1 - Check for PostgreSQL server
if [ "$PG_SERVER" != "" ]; then
   PG_DATABASE=${PG_DATABASE:-lemonldap-ng}
   DEFAULT_DBI_CHAIN="DBI:Pg:database=$PG_DATABASE;host=$PG_SERVER"
   DBI_CHAIN=${DBI_CHAIN:-$DEFAULT_DBI_CHAIN}
   export DBI_CHAIN
fi

if test "$DBI_CHAIN" != ""; then
   # 2 - Save current INI file
   cp /etc/lemonldap-ng/lemonldap-ng.ini /etc/lemonldap-ng/lemonldap-ng-file.ini
   # 3 - Build DBI variables if not given
   DBI_USER=${DBI_USER:-$PG_USER}
   DBI_PASSWORD=${DBI_PASSWORD:-$PG_PASSWORD}
   DBI_TABLE=${DBI_TABLE:-$PG_TABLE}
   export DBI_USER
   export DBI_PASSWORD
   export DBI_TABLE
   # 4 - Build new INI file
   set -e
   perl -i -pe 's/^\s*type\s*=\s*File\s*$/type=CDBI\n/;
   s/^\s*dirName\s*=.*$/dbiChain=$ENV{DBI_CHAIN}\ndbiUser=$ENV{DBI_USER}\ndbiPassword=$ENV{DBI_PASSWORD}\ndbiTable=$ENV{DBI_TABLE}\n/;
   ' /etc/lemonldap-ng/lemonldap-ng.ini
   # 5 - Check if there is already a configuration stored in SQL database
   CONF=`perl -MDBI -MDBD::Pg -e '$dbh=DBI->connect("'$DBI_CHAIN'","'$DBI_USER'","'$DBI_PASSWORD'",{ RaiseError => 1});$r=$dbh->selectall_arrayref("SELECT * FROM '$DBI_TABLE'");print scalar @$r'`
   # 6 - If no configuration in current server, let's convert current "File" configuration into database
   if test "$CONF" = "0"; then
     /usr/share/lemonldap-ng/bin/convertConfig --new=/etc/lemonldap-ng/lemonldap-ng.ini --current=/etc/lemonldap-ng/lemonldap-ng-file.ini
   fi
   /usr/share/docker-llng/updateConf set persistentStorage "Apache::Session::Browseable::Postgres"
   /usr/share/docker-llng/updateConf set persistentStorageOptions "{DataSource=>'$DBI_CHAIN',UserName=>'$DBI_USER',Password=>'$DBI_PASSWORD',Commit=>1}"
fi

/usr/share/docker-llng/updateConf "setDomain" $SSODOMAIN
/usr/share/docker-llng/updateConf "set" portal $PORTAL

# If Redis server is given, let's use it for sessions
if test "$REDIS_SERVER" != ""; then
    REDIS_INDEXES=${REDIS_INDEXES:-uid mail}
    /usr/share/docker-llng/updateConf set globalStorage 'Apache::Session::Browseable::Redis'
    /usr/share/docker-llng/updateConf set globalStorageOptions "{server=>'$REDIS_SERVER',Index=>'$REDIS_INDEXES'}"
    /usr/share/docker-llng/updateConf set forceGlobalStorageIssuerOTT 1
    /usr/share/docker-llng/updateConf set tokenUseGlobalStorage 1
    /usr/share/docker-llng/updateConf set forceGlobalStorageUpgradeOTT 1
fi
